import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { useContext, useEffect } from 'react';
import { Header, Hero, Modal, Row, SubscriptionPlan } from 'src/components';
import { AuthContext } from 'src/context/auth.context';
import { getList } from '@/components/helpers/lists';
import { IMovie, MyList, Product } from 'src/interfaces/app.interface';
import { API_REQUEST } from 'src/services/api.service';
import { useInfoStore } from 'src/store';
import { list } from 'postcss';

export default function Home({
	trending,
	topRated,
	trading,
	popular,
	popula,
	providers,
	documentary,
	family,
	products,
	subscription,
	list,
}: HomeProps): JSX.Element {
	const { modal} = useInfoStore();
	console.log(list);




	if(!subscription.length) return <SubscriptionPlan products={products}/>

	return (
		<div className='relative min-h-screen'>
			<Head>
				<title>Home - Usman</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/logo.svg' />
			</Head>
			<Header />
			<main className='relative pl-4 pb-24 lg:space-y-24 lg:pl-16'>
				<Hero trending={trending} />
				<section>
					<Row  title='Movies'  movies={popula}  />
					<Row  title='TV Show'  movies={trading} /* isBig={true} *//>
					{list.length ? <Row  title='My List'  movies={list} /> : null}
					<Row  title='New'  movies={popular} />
					<Row title='Popular' movies={topRated}/>
					<Row title='Kids' movies={providers}/>
					<Row title='Documentary' movies={documentary.reverse()}/>
					<Row title='Family' movies={family.reverse()}/>
				</section>
			</main>
			{modal && <Modal />}

		</div>
	);
}

export const getServerSideProps: GetServerSideProps<HomeProps> = async ({ req }) => {
	const user_id = req.cookies.user_id;
	if(!user_id) {
		return {
			redirect: {destination: '/auth', permanent: false},
		};
	}
		const [trending, topRated, trading, popular, popula, providers, documentary, family, products, subscription] = await Promise.all([
		fetch(API_REQUEST.trending).then(res => res.json()),
		fetch(API_REQUEST.top_rated).then(res => res.json()),
		fetch(API_REQUEST.trading).then(res => res.json()),
		fetch(API_REQUEST.popular).then(res => res.json()),
		fetch(API_REQUEST.popula).then(res => res.json()),
		fetch(API_REQUEST.providers).then(res => res.json()),
		fetch(API_REQUEST.documentary).then(res => res.json()),
		fetch(API_REQUEST.family).then(res => res.json()),
		fetch(API_REQUEST.products_list).then(res => res.json()),
		fetch(`${API_REQUEST.subscription}/${user_id}`).then(res => res.json()),
	]);
	const myList: MyList[] = await getList(user_id);


/* 	const trending = await fetch(API_REQUEST.trending).then(res => res.json());
	const topRated = await fetch(API_REQUEST.top_rated).then(res => res.json());
	const trading = await fetch(API_REQUEST.trading).then(res => res.json());
	const popular = await fetch(API_REQUEST.popular).then(res => res.json());
	const popula = await fetch(API_REQUEST.popula).then(res => res.json());
	const providers = await fetch(API_REQUEST.providers).then(res => res.json());
	const documentary = await fetch(API_REQUEST.documentary).then(res => res.json());
	const family = await fetch(API_REQUEST.family).then(res => res.json()); */

	return {
		props: {
			trending: trending.results,
			topRated: topRated.results,
			trading: trading.results,
			popular: popular.results,
			popula: popula.results,
			providers: providers.results,
			documentary: documentary.results,
			family: family.results,
			products: products.products.data,
			subscription: subscription.subscription.data,
			list: myList.map(c => c.product),
		},
	};
};

interface HomeProps {
	trending: IMovie[];
	topRated: IMovie[];
	trading: IMovie[];
	popular: IMovie[];
	popula: IMovie[];
	providers: IMovie[];
	documentary: IMovie[];
	family: IMovie[];
	products: Product[];
	subscription: string[];
	list: IMovie[];
}
