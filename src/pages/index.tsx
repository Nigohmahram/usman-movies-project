import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { Header, Hero, Row } from 'src/components';
import { IMovie } from 'src/interfaces/app.interface';
import { API_REQUEST } from 'src/services/api.service';

export default function Home({ trending, topRated, trading, popular, popula, providers, documentary, family}: HomeProps): JSX.Element {
	// console.log(topRated);

	return (
		<div className='relative min-h-screen'>
			<Head>
				<title>Home - Sammi</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/logo.svg' />
			</Head>
			<Header />
			<main className='relative pl-4 pb-24 lg:space-y-24 lg:pl-16'>
				<Hero trending={trending} />
				<section>
					<Row  title='Movies'  movies={popula}  />
					<Row  title='TV Show'  movies={trading} /* isBig={true} *//>
					<Row  title='New'  movies={popular} />
					<Row title='Popular' movies={topRated}/>
					<Row title='Kids' movies={providers}/>
					<Row title='Documentary' movies={documentary.reverse()}/>
					<Row title='Family' movies={family.reverse()}/>
				</section>
			</main>
		</div>
	);
}

export const getServerSideProps: GetServerSideProps<HomeProps> = async () => {
	const trending = await fetch(API_REQUEST.trending).then(res => res.json());
	const topRated = await fetch(API_REQUEST.top_rated).then(res => res.json());
	const trading = await fetch(API_REQUEST.trading).then(res => res.json());
	const popular = await fetch(API_REQUEST.popular).then(res => res.json());
	const popula = await fetch(API_REQUEST.popula).then(res => res.json());
	const providers = await fetch(API_REQUEST.providers).then(res => res.json());
	const documentary = await fetch(API_REQUEST.documentary).then(res => res.json());
	const family = await fetch(API_REQUEST.family).then(res => res.json());

	return {
		props: {
			trending: trending.results,
			topRated: topRated.results,
			trading: trading.results,
			popular: popular.results,
			popula: popula.results,
			providers: providers.results,
			documentary: documentary.results,
			family: family.results,
		},
	};
};

interface HomeProps {
	trending: IMovie[];
	topRated: IMovie[];
	trading: IMovie[];
	popular: IMovie[];
	popula: IMovie[];
	providers: IMovie[];
	documentary: IMovie[];
	family: IMovie[];
}